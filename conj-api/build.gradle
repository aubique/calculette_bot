plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

group = 'dev.aubique'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

configurations {
    clientSide
}

dependencies {
    /// ANGULAR SPA
    clientSide(project(':conj-ui'))
    /// SPRING BOOT, TESTING
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-json'
    }
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    /// LOMBOK, DB DRIVER
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    /// 3RD PARTY
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    implementation group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.40.0'
}

test {
    useJUnitPlatform()
}

def profiles = 'dev'
bootRun {
    args = ["--spring.profiles.active=" + profiles]
}

jar {
    from {
        configurations.clientSide.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
